"""
    Radix Core API - Babylon

    Generated by https://openapi-generator.tech with customisation from https://github.com/radixdlt/python-core-client/
"""


import sys
import unittest

import core_client
from core_client.model.authorized_depositor_badge import AuthorizedDepositorBadge
from core_client.model.authorized_depositor_badge_type import AuthorizedDepositorBadgeType
from core_client.model.non_fungible_authorized_depositor_badge import NonFungibleAuthorizedDepositorBadge
from core_client.model.non_fungible_authorized_depositor_badge_all_of import NonFungibleAuthorizedDepositorBadgeAllOf
from core_client.model.non_fungible_global_id import NonFungibleGlobalId
from core_client.model.resource_authorized_depositor_badge import ResourceAuthorizedDepositorBadge
globals()['AuthorizedDepositorBadge'] = AuthorizedDepositorBadge
globals()['AuthorizedDepositorBadgeType'] = AuthorizedDepositorBadgeType
globals()['NonFungibleAuthorizedDepositorBadge'] = NonFungibleAuthorizedDepositorBadge
globals()['NonFungibleAuthorizedDepositorBadgeAllOf'] = NonFungibleAuthorizedDepositorBadgeAllOf
globals()['NonFungibleGlobalId'] = NonFungibleGlobalId
globals()['ResourceAuthorizedDepositorBadge'] = ResourceAuthorizedDepositorBadge
from core_client.model.non_fungible_authorized_depositor_badge import NonFungibleAuthorizedDepositorBadge


class TestNonFungibleAuthorizedDepositorBadge(unittest.TestCase):
    """NonFungibleAuthorizedDepositorBadge unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testNonFungibleAuthorizedDepositorBadge(self):
        """Test NonFungibleAuthorizedDepositorBadge"""
        # FIXME: construct object with mandatory attributes with example values
        # model = NonFungibleAuthorizedDepositorBadge()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
