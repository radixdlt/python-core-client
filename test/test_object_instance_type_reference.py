"""
    Radix Core API - Babylon

    Generated by https://openapi-generator.tech with customisation from https://github.com/radixdlt/python-core-client/
"""


import sys
import unittest

import core_client
from core_client.model.fully_scoped_type_id import FullyScopedTypeId
from core_client.model.object_instance_type_reference import ObjectInstanceTypeReference
from core_client.model.object_instance_type_reference_all_of import ObjectInstanceTypeReferenceAllOf
from core_client.model.object_substate_type_reference import ObjectSubstateTypeReference
from core_client.model.object_substate_type_reference_type import ObjectSubstateTypeReferenceType
from core_client.model.package_object_substate_type_reference import PackageObjectSubstateTypeReference
globals()['FullyScopedTypeId'] = FullyScopedTypeId
globals()['ObjectInstanceTypeReference'] = ObjectInstanceTypeReference
globals()['ObjectInstanceTypeReferenceAllOf'] = ObjectInstanceTypeReferenceAllOf
globals()['ObjectSubstateTypeReference'] = ObjectSubstateTypeReference
globals()['ObjectSubstateTypeReferenceType'] = ObjectSubstateTypeReferenceType
globals()['PackageObjectSubstateTypeReference'] = PackageObjectSubstateTypeReference
from core_client.model.object_instance_type_reference import ObjectInstanceTypeReference


class TestObjectInstanceTypeReference(unittest.TestCase):
    """ObjectInstanceTypeReference unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testObjectInstanceTypeReference(self):
        """Test ObjectInstanceTypeReference"""
        # FIXME: construct object with mandatory attributes with example values
        # model = ObjectInstanceTypeReference()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
