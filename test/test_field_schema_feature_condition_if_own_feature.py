"""
    Babylon Core API - RCnet V2

    Generated by https://openapi-generator.tech with customisation from https://github.com/radixdlt/python-core-client/
"""


import sys
import unittest

import core_client
from core_client.model.field_schema_feature_condition import FieldSchemaFeatureCondition
from core_client.model.field_schema_feature_condition_always import FieldSchemaFeatureConditionAlways
from core_client.model.field_schema_feature_condition_if_outer_object_feature import FieldSchemaFeatureConditionIfOuterObjectFeature
from core_client.model.field_schema_feature_condition_if_own_feature import FieldSchemaFeatureConditionIfOwnFeature
from core_client.model.field_schema_feature_condition_if_own_feature_all_of import FieldSchemaFeatureConditionIfOwnFeatureAllOf
from core_client.model.field_schema_feature_condition_type import FieldSchemaFeatureConditionType
globals()['FieldSchemaFeatureCondition'] = FieldSchemaFeatureCondition
globals()['FieldSchemaFeatureConditionAlways'] = FieldSchemaFeatureConditionAlways
globals()['FieldSchemaFeatureConditionIfOuterObjectFeature'] = FieldSchemaFeatureConditionIfOuterObjectFeature
globals()['FieldSchemaFeatureConditionIfOwnFeature'] = FieldSchemaFeatureConditionIfOwnFeature
globals()['FieldSchemaFeatureConditionIfOwnFeatureAllOf'] = FieldSchemaFeatureConditionIfOwnFeatureAllOf
globals()['FieldSchemaFeatureConditionType'] = FieldSchemaFeatureConditionType
from core_client.model.field_schema_feature_condition_if_own_feature import FieldSchemaFeatureConditionIfOwnFeature


class TestFieldSchemaFeatureConditionIfOwnFeature(unittest.TestCase):
    """FieldSchemaFeatureConditionIfOwnFeature unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testFieldSchemaFeatureConditionIfOwnFeature(self):
        """Test FieldSchemaFeatureConditionIfOwnFeature"""
        # FIXME: construct object with mandatory attributes with example values
        # model = FieldSchemaFeatureConditionIfOwnFeature()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
