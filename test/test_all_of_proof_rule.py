"""
    Babylon Core API - RCnet V2

    Generated by https://openapi-generator.tech with customisation from https://github.com/radixdlt/python-core-client/
"""


import sys
import unittest

import core_client
from core_client.model.all_of_proof_rule import AllOfProofRule
from core_client.model.all_of_proof_rule_all_of import AllOfProofRuleAllOf
from core_client.model.amount_of_proof_rule import AmountOfProofRule
from core_client.model.any_of_proof_rule import AnyOfProofRule
from core_client.model.count_of_proof_rule import CountOfProofRule
from core_client.model.proof_rule import ProofRule
from core_client.model.proof_rule_type import ProofRuleType
from core_client.model.require_proof_rule import RequireProofRule
from core_client.model.requirement import Requirement
globals()['AllOfProofRule'] = AllOfProofRule
globals()['AllOfProofRuleAllOf'] = AllOfProofRuleAllOf
globals()['AmountOfProofRule'] = AmountOfProofRule
globals()['AnyOfProofRule'] = AnyOfProofRule
globals()['CountOfProofRule'] = CountOfProofRule
globals()['ProofRule'] = ProofRule
globals()['ProofRuleType'] = ProofRuleType
globals()['RequireProofRule'] = RequireProofRule
globals()['Requirement'] = Requirement
from core_client.model.all_of_proof_rule import AllOfProofRule


class TestAllOfProofRule(unittest.TestCase):
    """AllOfProofRule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testAllOfProofRule(self):
        """Test AllOfProofRule"""
        # FIXME: construct object with mandatory attributes with example values
        # model = AllOfProofRule()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
